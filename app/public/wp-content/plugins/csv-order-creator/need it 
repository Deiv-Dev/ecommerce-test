function process_order()
{
    if (isset($_POST['submit_order']) && check_required_fields()) {
        $order_id = uniqid('order_');
        $current_time = current_time('mysql');
        $total_price = 0;
        $line_items = [];

        foreach ($_POST['quantity'] as $product_id => $quantity) {
            if ($quantity > 0) {
                $product = wc_get_product($product_id);
                if (!$product) continue;

                $product_price = $product->get_price() * $quantity;
                $total_price += $product_price;

                // Prepare line item details
                $line_items[] = "name:" . $product->get_name() . "|product_id:" . $product_id .
                    "|sku:" . $product->get_sku() . "|quantity:" . $quantity .
                    "|total:" . wc_price($product_price) . "|sub_total:" . wc_price($product_price) .
                    "|meta:dydziai:" . implode(', ', wc_get_product_terms($product->get_id(), 'pa_dydziai', array('fields' => 'names'))) .
                    "|meta:atsiemimo-vieta:" . implode(', ', wc_get_product_terms($product->get_id(), 'pa_atsiemimo-vieta', array('fields' => 'names'))) .
                    "|_variation_id:" . $product->get_id();
            }
        }

        $customer_details = [
            "customer_name" => sanitize_text_field($_POST['customer_name']),
            "customer_email" => sanitize_email($_POST['customer_email']),
            "customer_phone" => sanitize_text_field($_POST['customer_phone']),
            "selected_location" => sanitize_text_field($_POST['selected_location'])
        ];

        // Prepare full order details for CSV
        $order_details = [
            'order_id' => $order_id,
            'order_number' => $order_id,
            'order_date' => $current_time,
            'paid_date' => '',
            'status' => 'completed',
            'shipping_total' => '0',
            'shipping_tax_total' => '0.00',
            'fee_total' => '0.00',
            'fee_tax_total' => '0.00',
            'tax_total' => '0.00',
            'cart_discount' => '0.00',
            'order_discount' => '0.00',
            'discount_total' => '0.00',
            'order_total' => wc_price($total_price),
            'order_subtotal' => wc_price($total_price),
            'order_key' => 'wc_order_' . $order_id,
            'order_currency' => 'EUR',
            'payment_method' => 'cod',
            'payment_method_title' => 'Apmokėjimąs grynais atsiimant',
            'transaction_id' => '',
            'customer_ip_address' => $_SERVER['REMOTE_ADDR'],
            'customer_user_agent' => $_SERVER['HTTP_USER_AGENT'],
            'shipping_method' => '',
            'customer_id' => '3',
            'customer_user' => '3',
            'customer_email' => $customer_details['customer_email'],
            'billing_first_name' => $customer_details['customer_name'],
            'billing_last_name' => '',
            'billing_company' => '',
            'billing_email' => $customer_details['customer_email'],
            'billing_phone' => $customer_details['customer_phone'],
            'billing_address_1' => '',
            'billing_address_2' => '',
            'billing_postcode' => '',
            'billing_city' => '',
            'billing_state' => '',
            'billing_country' => '',
            'shipping_first_name' => '',
            'shipping_last_name' => '',
            'shipping_company' => '',
            'shipping_phone' => '',
            'shipping_address_1' => '',
            'shipping_address_2' => '',
            'shipping_postcode' => '',
            'shipping_city' => '',
            'shipping_state' => '',
            'shipping_country' => '',
            'customer_note' => '',
            'wt_import_key' => '',
            'tax_items' => '',
            'shipping_items' => '',
            'fee_items' => '',
            'coupon_items' => '',
            'refund_items' => '',
            'order_notes' => '',
            'download_permissions' => '0',
            'meta:_wc_order_attribution_device_type' => 'Desktop',
            'meta:_wc_order_attribution_referrer' => '',
            'meta:_wc_order_attribution_session_count' => '1',
            'meta:_wc_order_attribution_session_entry' => '',
            'meta:_wc_order_attribution_session_pages' => '',
            'meta:_wc_order_attribution_session_start_time' => '',
            'meta:_wc_order_attribution_source_type' => '',
            'meta:_wc_order_attribution_user_agent' => $_SERVER['HTTP_USER_AGENT'],
            'meta:_wc_order_attribution_utm_source' => '',
            'line_item_1' => isset($line_items[0]) ? $line_items[0] : '',
            'line_item_2' => isset($line_items[1]) ? $line_items[1] : ''
        ];

        // Define headers for the CSV based on the keys of the $order_details array
        $header = array_keys($order_details);

        // Generate CSV
        generate_csv($header, array_values($order_details), 'order_details_' . date('Y-m-d_H-i-s') . '.csv');
    } else {
        echo '<p>Error: Required fields are missing or incorrect.</p>';
    }
}

function generate_csv($header, $data, $filename)
{
    $file_path = WP_CONTENT_DIR . '/uploads/' . $filename;
    $file = fopen($file_path, 'w');
    fputcsv($file, $header);
    fputcsv($file, $data);
    fclose($file);

    echo '<p>Order processed and saved to <a href="' . content_url('/uploads/') . $filename . '">Download CSV</a>.</p>';
}